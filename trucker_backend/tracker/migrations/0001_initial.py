# Generated by Django 5.1.7 on 2025-04-02 04:54

import datetime
import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=36, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('phone_number', models.IntegerField(null=True)),
                ('password', models.CharField(max_length=255)),
                ('cycle_hours', models.FloatField(default=70.0)),
                ('cycle_days', models.FloatField(default=8)),
                ('current_cycle_used', models.FloatField(default=0.0)),
                ('driver_number', models.CharField(max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=36, primary_key=True, serialize=False)),
                ('home_operating_center', models.CharField(max_length=255)),
                ('current_location', models.CharField(max_length=255)),
                ('pickup_location', models.CharField(max_length=255)),
                ('dropoff_location', models.CharField(max_length=255)),
                ('start_date', models.DateField(auto_now_add=True)),
                ('end_date', models.DateField(null=True)),
                ('status', models.CharField(choices=[('planned', 'Planned'), ('in_progress', 'In Progress'), ('completed', 'Completed')], max_length=20)),
                ('vehicle_no', models.IntegerField(default=0)),
                ('trailer_no', models.CharField(max_length=25)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LogSheet',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=36, primary_key=True, serialize=False)),
                ('shipper', models.CharField(max_length=255)),
                ('commodity', models.CharField(max_length=255)),
                ('total_mileage', models.IntegerField(default=0)),
                ('date', models.DateField(auto_now_add=True)),
                ('on_duty_start_time', models.TimeField(default=datetime.time(0, 0))),
                ('remarks', models.CharField(default='No Remarks', max_length=10000)),
                ('off_duty', models.FloatField(default=0.0)),
                ('on_duty', models.FloatField(default=0.0)),
                ('berth', models.FloatField(default=0.0)),
                ('driving', models.FloatField(default=0.0)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tracker.trip')),
            ],
        ),
        migrations.CreateModel(
            name='LogEntry',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=36, primary_key=True, serialize=False)),
                ('lat', models.FloatField(verbose_name=[django.core.validators.MinValueValidator(-90), django.core.validators.MaxValueValidator(90)])),
                ('long', models.FloatField(validators=[django.core.validators.MinValueValidator(-180), django.core.validators.MaxValueValidator(180)])),
                ('location', models.CharField(max_length=255)),
                ('start_time', models.TimeField(default=datetime.time(0, 0))),
                ('end_time', models.TimeField(default=datetime.time(0, 0))),
                ('duration', models.FloatField(default=0.0)),
                ('duty_status', models.CharField(choices=[('off_duty', 'Off Duty'), ('sleeper', 'Sleeper'), ('driving', 'Driving'), ('on_duty', 'On Duty')], max_length=20)),
                ('activity', models.TextField(blank=True, null=True)),
                ('logsheet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tracker.logsheet')),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tracker.trip')),
            ],
        ),
    ]
